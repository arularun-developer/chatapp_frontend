{"version":3,"file":"static/js/640.a8afd65c.chunk.js","mappings":"oMAMA,MAoDA,EApDsBA,KAClB,IAAIC,EAAWC,GAAYC,EAAAA,EAAAA,UACvBC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MAab,OACIC,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAAAC,UACLF,EAAAA,EAAAA,KAAA,WAASG,UAAU,IAAGD,UAClBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,+EAA8ED,SAAA,EAC7FE,EAAAA,EAAAA,MAAA,KAAGC,KAAK,IAAIF,UAAU,8EAA6ED,SAAA,EAC3FF,EAAAA,EAAAA,KAACM,EAAAA,IAA4B,CAACH,UAAU,2BAA2B,mBAIvEH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sEAAqED,UAChFE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,oCAAmCD,SAAA,EAC9CF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qFAAoFD,SAAC,oBAGnGE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,yBAAyBI,OAAO,IAAGL,SAAA,EAC9CE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOQ,IAAI,WAAWL,UAAU,6CAA4CD,SAAC,kBAC7EF,EAAAA,EAAAA,KAAA,SAAOS,IAAMC,GAAMjB,EAAYiB,EAAGC,KAAK,WAAWC,KAAK,WAAWC,GAAG,WAAWC,YAAY,mDAAWX,UAAU,wIAAwIY,SAAS,SAEtQX,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACIF,EAAAA,EAAAA,KAAA,SAAOQ,IAAI,YAAYL,UAAU,6CAA4CD,SAAC,sBAC9EF,EAAAA,EAAAA,KAAA,SAAOS,IAAMC,GAAMhB,EAAYgB,EAAGC,KAAK,WAAWC,KAAK,YAAYC,GAAG,YAAYC,YAAY,mDAAWX,UAAU,wIAAwIY,SAAS,SAExQf,EAAAA,EAAAA,KAAA,UAAQgB,QAlCpBC,WACRC,EAAAA,EAAAA,IAAWzB,EAAU0B,QACrBC,EAAAA,EAAAA,IAAW,yEACJ3B,EAAU0B,QAAUzB,EAAUyB,OACrCC,EAAAA,EAAAA,IAAW,uDAELC,EAAAA,EAAAA,IAAqB5B,EAAU0B,MAAOrB,EAAOwB,OAAOC,MAAMC,IACxDA,GAAQ5B,EAAS,IAAI,GAEjC,EAyBkDe,KAAK,SAASR,UAAU,uHAAsHD,SAAC,qBACzKE,EAAAA,EAAAA,MAAA,KAAGD,UAAU,gCAA+BD,SAAA,CAAC,6BAChBF,EAAAA,EAAAA,KAACyB,EAAAA,GAAI,CAACC,GAAG,IAAIvB,UAAU,6CAA4CD,SAAC,gCAO9G,C","sources":["components/ResetPassword.jsx"],"sourcesContent":["import React, { Fragment, useRef } from 'react'\nimport { Link, useNavigate, useParams } from 'react-router-dom'\nimport { ErrorToast, IsPassword } from '../helper/formHelper'\nimport { ResetPasswordRequest } from '../apiRequest/authRequest'\nimport { HiChatBubbleOvalLeftEllipsis } from \"react-icons/hi2\";\n\nconst ResetPassword = () => {\n    let npassword, cpassword = useRef()\n    let navigate = useNavigate()\n    let params = useParams()\n\n    const onReset = async () => {\n        if (IsPassword(npassword.value)) {\n            ErrorToast(\"Password must be six characters, at least one letter and one number !\")\n        } else if (npassword.value !== cpassword.value) {\n            ErrorToast(\"Password doesn't match with confirm password.\")\n        } else {\n            await ResetPasswordRequest(npassword.value, params.token).then((result) => {\n                if (result) navigate('/')\n            })\n        }\n    }\n    return (\n        <Fragment>\n            <section className=\" \">\n                <div className=\"flex flex-col items-center justify-center px-6 py-8 mx-auto h-screen lg:py-0\">\n                <a href=\"#\" className=\"flex text-bold px-2 items-center mb-6 text-2xl font-semibold text-[#b3b3b3]\">\n                        <HiChatBubbleOvalLeftEllipsis className='text-blue-600 text-4xl' />\n\n                        Chat Buddies\n                    </a>\n                    <div className=\"w-full rounded-lg shadow bg-neutral-800 md:mt-0 sm:max-w-md xl:p-0 \">\n                        <div className=\"p-6 space-y-4 md:space-y-6 sm:p-8\">\n                            <h1 className=\"text-xl font-bold leading-tight tracking-tight text-white text-center md:text-2xl \">\n                                Reset Password\n                            </h1>\n                            <div className=\"space-y-4 md:space-y-6\" action=\"#\">\n                                <div>\n                                    <label for=\"password\" className=\"block mb-2 text-sm font-medium text-white \">New Password</label>\n                                    <input ref={(i) => npassword = i} type=\"password\" name=\"password\" id=\"password\" placeholder=\"••••••••\" className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-[#0C7075] focus:border-[#0C7075] block w-full p-2.5 \" required=\"\" />\n                                </div>\n                                <div>\n                                    <label for=\"Cpassword\" className=\"block mb-2 text-sm font-medium text-white \">Confirm Password</label>\n                                    <input ref={(i) => cpassword = i} type=\"password\" name=\"Cpassword\" id=\"Cpassword\" placeholder=\"••••••••\" className=\"bg-gray-50 border border-gray-300 text-gray-900 sm:text-sm rounded-lg focus:ring-[#0C7075] focus:border-[#0C7075] block w-full p-2.5 \" required=\"\" />\n                                </div>\n                                <button onClick={onReset} type=\"submit\" className=\"w-full font-medium rounded-lg text-sm px-5 py-2.5 text-center text-dark bg-white hover:bg-gray-950 hover:text-white \">Upadte Password</button>\n                                <p className=\"text-sm font-bold text-white \">\n                                    Already have an account? <Link to=\"/\" className=\"font-medium text-blue-600 hover:underline \">Login here</Link>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Fragment>\n    )\n}\n\nexport default ResetPassword\n"],"names":["ResetPassword","npassword","cpassword","useRef","navigate","useNavigate","params","useParams","_jsx","Fragment","children","className","_jsxs","href","HiChatBubbleOvalLeftEllipsis","action","for","ref","i","type","name","id","placeholder","required","onClick","async","IsPassword","value","ErrorToast","ResetPasswordRequest","token","then","result","Link","to"],"sourceRoot":""}